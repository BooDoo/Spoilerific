
<form action="[% c.uri_for_action( '/thread/post', [ thread.id ] ) %]">
<ul>
<li>Your post will have a shortened link back to this page automatically added.</li>
<li>We leave any <code>@usernames</code>, <code>#hashtags</code>, and links in your tweet unscrambled.</li>
<li>Text in {curly braces} will also stay unscrambled (and we'll remove the braces).</li>
<li>If there's room left over, we'll add a few other appropriate hashtags and labels.</li>
<li>Click the <em>Preview</em> button to see what the post will look like on Twitter.</li>
<li>Click <em>Post this to Twitter</em> when you're happy with the preview.</li>
</ul>
<p>
Characters left: <span id="characters-left">0</span>
</p>
<textarea id="body_plaintext" name="body_plaintext">[% c.flash.body_plaintext %]</textarea><button type="button" id="preview_button">Preview</button>

<div id="preview_div">
Preview your tweet before posting it!
</div>
<input type="submit" id="post_button" value="Post this to Twitter" />
<input type="hidden" id="in_reply_to" name="in_reply_to" value="" />
<p id="post_warning">You must click <em>Post this to Twitter</em> when you're ready to share this post. Otherwise, the link back to this page won't work.</p>
</form>

<script>
var max_post_length = 140;
var url_length = [% url_length %];
var space_length = 1;
var hashtag_length = [% hashtag_length || 0 %];
var preview_url = "[% c.uri_for_action( '/thread/preview', [ thread.id ] ) %]";

update_characters_left_display();

// Bind a change-anything listener to the textarea.
$("#body_plaintext").bind("propertychange keyup input cut paste", function( event ) {
    update_characters_left_display();    
} );

// Disable the post button.
$( '#post_button' ).attr( 'disabled', 'disabled' );

function update_characters_left_display() {
    var current_text = $("#body_plaintext").val();
    
    // Detect, remove and count all URLs.
    var url_count = 0;
    var bracketed_text_count = 0;
    var url_pattern = /(?:(http|ftp|https):\/\/)?[\w-]+(\.[\w-]+)+([\w.,@?^=%&amp;:\/~+#-]*[\w@?^=%&amp;\/~+#-])?/g;
    
    var bracket_pattern = /{.*?}/g;

    var matches = current_text.match( url_pattern );
    if ( matches == null ) {
        url_count = 0;
    }
    else {
        url_count = matches.length;
    }
    
    matches = current_text.match( bracket_pattern );
    if ( matches == null ) {
        bracketed_text_count = 0;
    }
    else {
        bracketed_text_count = matches.length;
    }
    
    // Add the remainder's length to URL lengths + required hashtag 
    // + required URL
    var length = current_text.length 
                 + ( url_count * url_length)
                 + ( bracketed_text_count * -2 )
//                 + space_length
//                 + hashtag_length
                 + space_length
                 + url_length
                 ;
    
    var characters_left = max_post_length - length;

    // Write this number into the display
    $("#characters-left").html( characters_left );
}

function reply_to( tweet_id, poster ) {
    $( '#in_reply_to' ).val( tweet_id );
    window.location.hash = 'post_form';
    $( '#body_plaintext' ).focus();
    $( '#body_plaintext' ).val( '@' + poster + ' '
                                + $( '#body_plaintext' ).val() ); 
}

$( '#preview_button').click( function() {
    $( '#preview_div' ).html( '<p>Loading...</p>' )
                       .load( 
                            preview_url,
                            {
                                'body_plaintext': $("#body_plaintext").val()
                            }
                       );
    $( '#post_button' ).removeAttr( 'disabled' );   
} );

</script>